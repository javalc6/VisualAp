#summary Introduction to VisualAp
= Introduction =
VisualAp is a visual framework for building application and systems based on visual components. Users can add their own visual components in order to extend the capability of VisualAp.


VisualAp can be used in order to perform audio processing, image processing, text and other process-driven emulation.

VisualAp provides a visual framework based on lightweight components, called proclet. 


The user can create an application by selecting the components from a toolbox, configuring the parameters (via the Javabeans framework), and connecting the components together in order to set-up communication channels between the components.


In the first release the user runs code execution through the engine included in VisualAp, in interpreted mode. In later releases it will be possible to generate Java code that can be compiled and run in standalone mode.

= Basic Concepts =
VisualAp is based on two main concepts: system and components.

A [component] is the basic element providing some services. A system is build using a number of components that are configured and connected together in order to achieve a complex functionality.

In VisualAp a system is a graph whose nodes are the components.

In VisualAp a component is also called proclet (processing element). 


There are three type of components:

  * source: any component that generates some sort of data
  * sink: any component that consumes data
  * processor: any component that process input data into output data